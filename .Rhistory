bye()
q()
library("swirl", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
swirl()
bye()
q(n)
q()
swirl()
library("swirl", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
swirl()
submit()
submit()
submit()
submit()
mad_libs(Floripa, some,church)
mad_libs("Floripa","some","church")
submit()
I%p%love%p%R
'I'%p%'love'%p%'R'
'I%p%love%p%R'
'I %p% love %p% R'
'I%p%love'
I%p%love
'I'%p%'love'
'I'%p%'love'%p%'R'
"I"%p%"love"%p%"R"
%p%'I'%p%'love'%p%'R'%p%
'I''love'%p%'R'
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vlas
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,lenght)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem)elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
bye()
q()
library("swirl", lib.loc="~/R/i686-pc-linux-gnu-library/3.0")
swirl()
class(plants)
dim(plants)
nrow(plants)
mcol(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
sample(LETTERS)
LETTERS
sample(LETTERS)
sample(100,c(0.3,0.7))
bye()
swirl()
flips<-c(sample(1:100,c(0,1),prob=(0.3,0.7)))
sample(100,c(0,1))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(100,1,prob=0.7)
flips2<-rbinom(100,1,prob=0.7)
flips2
sum(flips2)
?rnow
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-(Sys.time())
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-POSIXlt(sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3<-(strptime("October 17, 1986 08:24"))
t3<-(strptime("October 17, 1986 08:24", ))
t3<-strptime("October 17, 1986 08:24")
t3<-format("October 17, 1986 08:24", format="")
t3<-strptime("October 17, 1986 08:24", format="")
t3<-c(strptime("October 17, 1986 08:24", format=""))
t3<-strptime("October 17, 1986 08:24", format="%y-%m-%d %H:$M:%S")
t3<-strptime("October 17, 1986 08:24",format,tz="")
t3<-c(strptime("October 17, 1986 08:24",format,tz=""))
t3<-strptime("October 17 1986 08:24",format,tz="")
t3<-strptime("October 17, 1986" "08:24",format,tz="")
t3
t3<-c("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d,%Y %H:%M")
t4<-strptime(t3,"%m %d,%Y %H:%M")
t4<-strptime(t3,"%m %d,%Y %H:%M")
t4<-strptime(t3,"%B-%d-%Y %H:%M")
t4<-strptime(t3,"%B-%d-%Y" "%H:%M")
t4<-strptime(t3,"%m-%d-%Y %H:%M")
t4<-strptime(t3, format="%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time(-t1)
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x=cars$speed,y=cars$dist,"Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist,xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist,xlab="Speed", ylab="Stopping Distance", main="My Plot")
plot(cars,main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
cube<-function(x,n){x^3}
cube(3)
x<-1:10
if(x>5){x<-0}
x
f<-function(x){}
f<-function(x){g<-function(y){y+z}z<-4 x+g(x)}
f<-function(x){g<-function(y){y+z}z<-4 x+g(x)}}
ls()
rm(ls())
rm(ls)
rm[ls()]
rm(cars)
rm(x)
ls()
rm(list=ls())
q()
x<-matrix(1:6, 2,3)
for(i in seq_len(ncol(x))){for(j in seq_len(ncol(x))){print(x([i,j]))}}
for(i in seq_len(ncol(x))){for(j in seq_len(ncol(x))){print(x[i,j])}}
ls()
rm[ls()]
rm(ls())
rm(list=ls())
x+y
add2(3,5)
add2<-c(3,5)
add2<-3,5
add2(3,5)
rm(add2)
add2(3,5)
add2<-function(x,y){
x+y
}
add2(3,5)
above<-function(x,n){
y<-x>n
x[y]
}
above(1:20,7)
above(1:20,07)
ls()
rm(list=ls())
q()
y<-10
f<-function(x){
y<-2
y^2+g(x)
}
g<-function(x){
x*y
}
f(3)
rm(list=ls())
cube<-function(x, n){
x^3
}
cube(3)
rm(cube)
x<-1:10
if(x>5){
x<-0
}
x
rm(x)
f<-function(x){
g<-function(y){
y+r
}
z<-4
x+g(x)
}
z<-10
f(3)
f<-function(x){
g<-function(y){
y+r
}
z<-4
x+g(x)
}
f(3)
f(3)
rm(z)
f(3)
z<-10
f(3)
f(3)
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
f(3)
rm(list=ls())
x<-5
y<-if(x<3){
NA
}else{
10
}
y=NULL
is.null(y)
y=NULL
!is.null(y)
rm(x,y)
q()
setwd("~/")
directory<-~/specdata
directory<-c(~/specdata)
directory<-c(specdata)
directory<-c("specdata")
directory
rm(directory)
directory<-read.csv(specdata)
directory<-read.csv("specdata")
directory<-file(specdata)
directory<-file("specdata")
directory<-file("~/specdata")
rm(directory)
q()
load("~/.RData")
id<-(1:332)
rm(id)
id=1:332
rm(id)
x<-c("a","b","c","d")
for(i in 1:4){
print(x[i])
}
for(i in seq.along(x)){
print(x[i])
}
x<-("a","b","c","d")
for(i in seq.along(x)){
print(x[i])
}
x<-("a","b","c","d")
for(i in 1:4){
print(x[i])
}
for(i in seq.along(x)){
print(x[i])
}
x<-("a","b","c","d")
for(i in 1:4){
print(x[i])
}
for(i in seq_along(x)){
print(x[i])
}
rm(i,x)
q()
submit(manual=TRUE)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
q()
x<-matrix(c(1,2,3,4),nrow=2)
x
y<-solve(x)
y
x%%y
q()
library(datasets)
data(iris)
?iris
colMeans(iris)
apply(iris,1,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(iris)
?iris
class(iris)
iris[,1:4]
iris[1:4,]
x<-iris[,"Sepal.Length"]
sapply(iris, mean, iris[,"Species"]=="virginica")
lapply(iris, mean, iris[,"Species"]=="virginica")
as.list(iris)
x<-as.list(iris)
lapply(x, mean[,"Sepal.Length"], x[,"Species"]=="virginica")
lapply(x, mean[,Sepal.Length], x[,"Species"]=="virginica")
mapply(x, mean[,"Sepal.Length"], x[,"Species"]=="virginica")
lapply(x, mean(x[,"Sepal.Length"]), x[,"Species"]=="virginica")
sapply(x, mean(x[,"Sepal.Length"]), x[,"Species"]=="virginica")
mapply(x, mean(x[,"Sepal.Length"]), x[,"Species"]=="virginica")
mapply(x, mean, x[,"Species"]=="virginica")
lapply(x, mean, x[,"Species"]=="virginica")
lapply(x, mean, x[,Species]=="virginica")
mapply(x, mean, x[,Species]=="virginica")
x[,1]
x[[,1]]
x(1)
x("Sepal.Length")
x
x$Sepal.Length
lapply(x, mean(x$Sepal.Length), x$Species=="virginica")
mean(x$Sepal.Length)
lapply(x, mean(x$Sepal.Length))
apply(x, mean(x$Sepal.Length))
sapply(x, mean(x$Sepal.Length))
sapply(x,FUN=mean(x$Sepal.Length))
lapply(x,FUN=mean(x$Sepal.Length))
lapply(x, mean)
lapply(x, mean,x$Species==virginica)
iris[1:4,]
lapply(x, mean,x$Species=="virginica")
lapply(x, mean, x$Species=="virginica")
sapply(x, mean, x$Species=="virginica")
mapply(x, mean, x$Species=="virginica")
lapply(x, mean, x[,5]=="virginica")
lapply(x, mean, x(5)=="virginica")
View(x)
mean(x[101:150,1])
mean(iris[101:150,1])
rm(list=ls())
library(datasets)
data(mtcars)
?mtcars
apply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
?mtcars
with(mtcars, tapply(mpg, cyl, mean))
mtcars[,2]
pply(mtcars, 2, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
debug(ls)
ls()
library(datasets)
data(mtcars)
?mtcars
help.search("absolute difference")
help.start("absolute difference")
view(mtcars)
View(mtcars)
library(datasets)
data(iris)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
View(iris)
tapply(iris$Sepal.Length, iris$species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
26.66364-15.10000
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
rm(list=ls())
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
setwd("~/Área de Trabalho/Coursera/specdata")
x<-read.csv("001.csv")
y<-na.omit(x[,3])
makeVector(y)
makeVector(y)
zi<-na.omit(x[,3])
makeVector(zi)
cachemean(zi)
setwd("~/datasciencecoursera/ProgrammingAssignment2")
rm(list=ls())
m <- NULL
class(m)
?NULL
example(<<-)
get <- function() x
setmean <- function(mean) m <<- mean
rm(list=ls())
makeCacheMatrix <- function(x = matrix()) {
inverse<-solve(x)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
makeCacheMatrix
}
a<-matrix(c(1:4),nrow=2,ncol=2)
b<-makeCacheMatrix(a)
b
c<-cacheSolve(b)
c
cacheSolve(b)
cacheSolve
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
makeCacheMatrix(x)
}
cacheSolve(b)
d<-cacheSolve(b)
makeCacheMatrix <- function(x = matrix()) {
inverse<<-solve(x)
}
b<-makeCacheMatrix(a)
d<-cacheSolve(b)
